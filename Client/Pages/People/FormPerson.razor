
<EditForm Model="@Person" OnValidSubmit="OnValidSubmit">
    <div class="form-field mt-3">
        <label><Icon IconName="fa-users" /> Name:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Person.Name" />
            <ValidationMessage For="@(() => Person.Name)" />
        </div>
    </div>
    
    <div class="form-field mt-3">
        <label><Icon IconName="fa-phone" /> Phone:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Person.Phone" />
            <ValidationMessage For="@(() => Person.Phone)" />
        </div>
    </div>

    <div class="form-field mt-3">
        <label><Icon IconName="fa-at" /> Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Person.Email" />
            <ValidationMessage For="@(() => Person.Email)" />
        </div>
    </div>

    <DataAnnotationsValidator />
    
    <a class="btn btn-outline-danger mt-4" href="/"><Icon IconName="fa-xmark" /> Cancel</a>
    <button class="btn btn-outline-success mt-4" type="submit"><Icon IconName="fa-floppy-disk" IconStyle="IconStyle.Regular" /> @ButtonText</button>

</EditForm>


@code {
    [Parameter] public Person Person { get; set; } = new Person();
    [Parameter] public  String ButtonText { get; set; } = "Save";
    
    // EventCallback is the type of data to specify that it needs a function/method
    [Parameter] public EventCallback OnValidSubmit { get; set; }
}

